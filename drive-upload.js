require('dotenv').config();
const fs = require('fs');
const path = require('path');
const { google } = require('googleapis');
const QRCode = require('qrcode');
const { PDFDocument } = require('pdf-lib');

// ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Drive API –¥–ª—è Shared Drive
const auth = new google.auth.GoogleAuth({
  credentials: JSON.parse(process.env.GOOGLE_CREDENTIALS_JSON),
  scopes: ['https://www.googleapis.com/auth/drive']
});
const drive = google.drive({ version: 'v3', auth });

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç PDF –Ω–∞ Google Drive, –¥–æ–±–∞–≤–ª—è–µ—Ç QR-–∫–æ–¥ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É–±–ª–∏—á–Ω—É—é —Å—Å—ã–ª–∫—É.
 */
async function uploadToDriveAndAddQR(localPath, contractNumber) {
  try {
    const pdfBytes = fs.readFileSync(localPath);
    const pdfDoc = await PDFDocument.load(pdfBytes);

    // üß™ –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
    const tmpDriveRes = await drive.files.create({
      requestBody: {
        name: `shartnoma_${contractNumber}.pdf`,
        mimeType: 'application/pdf',
        parents: [process.env.DRIVE_FOLDER_ID] // ‚úÖ Shared Drive –ø–∞–ø–∫–∞
      },
      media: {
        mimeType: 'application/pdf',
        body: fs.createReadStream(localPath)
      },
      supportsAllDrives: true // ‚úÖ –í–∞–∂–Ω–æ –¥–ª—è shared drive
    });

    const fileId = tmpDriveRes.data.id;

    // üîì –î–µ–ª–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–º
    await drive.permissions.create({
      fileId,
      requestBody: { role: 'reader', type: 'anyone' },
      supportsAllDrives: true
    });

    const driveUrl = `https://drive.google.com/file/d/${fileId}/view`;

    // üßæ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR
    const qrDataUrl = await QRCode.toDataURL(driveUrl);
    const qrImageBytes = Buffer.from(qrDataUrl.split(',')[1], 'base64');
    const qrImage = await pdfDoc.embedPng(qrImageBytes);
    const qrDims = qrImage.scale(0.5);
    const lastPage = pdfDoc.getPages().at(-1);

    lastPage.drawImage(qrImage, {
      x: 410,
      y: 56,
      width: qrDims.width,
      height: qrDims.height
    });

    const updatedPdfBytes = await pdfDoc.save();
    fs.writeFileSync(localPath, updatedPdfBytes);

    // üîÅ –ü–µ—Ä–µ–∑–∞–ø–∏—Å—å –≤ Drive
    await drive.files.update({
      fileId,
      media: {
        mimeType: 'application/pdf',
        body: fs.createReadStream(localPath)
      },
      supportsAllDrives: true
    });

    console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å QR:', driveUrl);
    return driveUrl;

  } catch (err) {
    console.error('‚ùå Drive yoki QR xatolik:', err.message);
    return null;
  }
}

module.exports = { uploadToDriveAndAddQR };
